{"version":3,"sources":["contexts/GamesContext.js","contexts/UsersContext.js","components/InvitationNotification.js","contexts/SocketConext.js","requests/api.js","contexts/TypesContext.js","components/GameCell.js","components/Game.js","utils/utils.js","pages/CurrentGamePage.js","pages/SignupPage.js","components/ProtectedRoute.js","components/UsersListItem.js","components/InviteUserModal.js","components/UsersList.js","components/Routes.js","components/LeaveGameButton.js","components/LogoutButton.js","components/Navbar.js","App.js","index.js"],"names":["initialGamesValue","currentGame","prevGames","GamesContext","createContext","GamesProvider","children","useState","setCurrentGame","setPrevGames","Provider","value","useGames","useContext","initialUsersState","currentUser","invitedUser","activeUsers","UsersContext","UsersProvider","setCurrentUser","setInvitedUser","setActiveUsers","useUsers","InvitationNotification","id","socket","useSocket","InviteActionButtonsStyles","background","color","border","margin","fontSize","style","onClick","emit","removeNotification","notifications","io","autoConnect","SocketContext","SocketProvider","notificationID","setNotificationID","useEffect","on","users","invitingUser","name","Math","random","notification","title","container","type","dismiss","duration","click","touch","showIcon","pauseOnHover","message","addNotification","addInviteNotification","game","newCurrentUser","newInvitedUser","newGame","store","insert","animationIn","animationOut","onScreen","endgameErrorNotification","off","apiClient","axios","create","baseURL","timeout","userData","a","post","res","data","userId","get","player1Id","player2Id","api","signupUser","getGameListForUser","getActiveUsersList","createGame","getTypes","TypesContext","TypesProvider","types","setTypes","console","log","fetchedTypes","fetchTypes","useTypes","GameCell","i","state","index","custom","width","mapStateToColor","s","undefined","calcRow","row","col","className","e","borderRadius","backgroundColor","gridColumn","gridRow","height","Game","playerColor","useWarning","EMPTYCELL","cell","EMPTY","toString","setWarning","handleClick","_","winner","newGameState","split","map","parseInt","availableIndex","columnIndicies","k","push","reverse","calculateColumnIndicies","charAt","shift","getAvailableIndex","newGameStateStr","join","isThisAWin","gameState","isIdentical","arr","every","v","j","r","c","currentRow","slice","currentCol","temp","result","length","maxLength","max","y","x","getDiagonalArrays","currentArr","isMoveWinning","p","current_player","isObjectEmpty","obj","Object","keys","CurrentGamePage","currentPlayer","setCurrentPlayer","currentUserColor","invitedUserColor","setUserColors","warning","infoStyle","winnerPlayer","winnerNotification","colors","player_1_id","player_1_color","player_2_id","Error","player_2_color","JSON","stringify","evaluateUsersColors","textAlign","padding","maxWidth","float","SignupPage","setName","error","setError","loading","setLoading","preventDefault","newUser","successSignupNotification","failSignupNotification","response","msg","auth","user","connect","htmlFor","placeholder","onChange","target","disabled","ProtectedRoute","Component","component","isAuthenticated","redirectPath","rest","render","to","matchUserStatus","status","valIndex","values","indexOf","toLowerCase","UserListItem","created_at","onInvite","userTypes","createdAt","Date","textTransform","getMonth","getDate","getFullYear","invitationStatusValues","InviteUserModal","isOpen","setOpen","invitationStatus","setInvitationStatus","onAfterClose","onAfterOpen","inviteAcceptedHandler","setTimeout","inviteRejectedHandler","content","alt","src","UsersList","isModalOpen","setIsModalOpen","history","useHistory","Routes","exists","setExists","newExists","exact","strict","path","LeaveGameButton","LogoutButton","disconnect","Navbar","gameExists","App","appElement","useRef","Modal","setAppElement","current","ref","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.205c2538.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\nconst initialGamesValue = {\n  currentGame: {},\n  prevGames: [],\n};\n\nconst GamesContext = createContext(initialGamesValue);\n\nexport default function GamesProvider({ children }) {\n  const [currentGame, setCurrentGame] = useState(initialGamesValue.currentGame);\n  const [prevGames, setPrevGames] = useState(initialGamesValue.prevGames);\n\n  return (\n    <GamesContext.Provider\n      value={{\n        currentGame,\n        setCurrentGame,\n        prevGames,\n        setPrevGames,\n      }}\n    >\n      {children}\n    </GamesContext.Provider>\n  );\n}\n\nexport function useGames() {\n  return useContext(GamesContext);\n}\n","import React, { createContext, useContext, useState } from \"react\";\n\nconst initialUsersState = {\n  currentUser: {},\n  invitedUser: {},\n  activeUsers: [],\n};\nconst UsersContext = createContext(initialUsersState);\n\nexport default function UsersProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(initialUsersState.currentUser);\n  const [invitedUser, setInvitedUser] = useState(initialUsersState.invitedUser);\n  const [activeUsers, setActiveUsers] = useState(initialUsersState.activeUsers);\n\n  return (\n    <UsersContext.Provider\n      value={{\n        currentUser,\n        setCurrentUser,\n        invitedUser,\n        setInvitedUser,\n        activeUsers,\n        setActiveUsers,\n      }}\n    >\n      {children}\n    </UsersContext.Provider>\n  );\n}\n\nexport function useUsers() {\n  return useContext(UsersContext);\n}\n","import React from \"react\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { store as notifications } from \"react-notifications-component\";\n\nexport default function InvitationNotification({ id }) {\n  const { socket } = useSocket();\n\n  const InviteActionButtonsStyles = {\n    background: \"#5ea400\",\n    color: \"white\",\n    border: \"none\",\n    margin: \"10px\",\n    fontSize: \"1.2rem\",\n  };\n\n  return (\n    <div\n      style={{\n        margin: \"10px\",\n      }}\n    >\n      <button\n        onClick={() => {\n          socket.emit(\"invite accepted\");\n          removeNotification(id);\n        }}\n        style={{ ...InviteActionButtonsStyles, background: \"#5ea400\" }}\n      >\n        Accept\n      </button>\n      <button\n        onClick={() => {\n          socket.emit(\"invite rejected\");\n          removeNotification(id);\n        }}\n        style={{\n          ...InviteActionButtonsStyles,\n          background: \"#ec3d3d\",\n        }}\n      >\n        Reject\n      </button>\n    </div>\n  );\n}\n\nexport function addInviteNotification(invitingUser) {\n  const notificationID = `notification-for:${invitingUser.name}-(${invitingUser.id})-(${Math.random() * 1000})`;\n  removeNotification(notificationID);\n  const notification = {\n    id: notificationID,\n    title: `A new invite has been sent from ${invitingUser.name}`,\n    container: \"top-right\",\n    type: \"info\",\n    dismiss: {\n      duration: 0,\n      click: false,\n      touch: false,\n      showIcon: false,\n      pauseOnHover: true,\n    },\n    message: <InvitationNotification id={notificationID} />,\n  };\n  return notifications.addNotification(notification);\n}\n\nexport function removeNotification(id) {\n  notifications.removeNotification(id);\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { store } from \"react-notifications-component\";\nimport { io } from \"socket.io-client\";\nimport {\n  addInviteNotification,\n  removeNotification,\n} from \"../components/InvitationNotification\";\nimport { useGames } from \"./GamesContext\";\nimport { useUsers } from \"./UsersContext\";\n\nconst URL = \"https://online-connect4.herokuapp.com\";\nconst socket = io(URL, { autoConnect: false });\n\nconst SocketContext = createContext();\n\nexport default function SocketProvider({ children }) {\n  const { setActiveUsers, setCurrentUser, setInvitedUser } = useUsers();\n  const { setCurrentGame } = useGames();\n  const [notificationID, setNotificationID] = useState(null);\n\n  useEffect(() => {\n    socket.on(\"auu\", (users) => {\n      setActiveUsers(users);\n    });\n\n    socket.on(\"notify of invite\", (invitingUser) => {\n      setNotificationID(addInviteNotification(invitingUser));\n    });\n\n    socket.on(\n      \"game created\",\n      ({ game, currentUser: newCurrentUser, invitedUser: newInvitedUser }) => {\n        setCurrentGame(game);\n        setCurrentUser(newCurrentUser);\n        setInvitedUser(newInvitedUser);\n      }\n    );\n\n    socket.on(\"game has changed\", (newGame) => {\n      setCurrentGame(newGame);\n    });\n\n    socket.on(\"game has ended\", () => {\n      const gameEndNotification = {\n        title: \"Game Ended\",\n        message:\n          \"The game was ended because the other player either left the game or logged out of his account\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      };\n      store.addNotification(gameEndNotification);\n      setCurrentGame({});\n      setInvitedUser({});\n    });\n\n    socket.on(\"clear game\", () => {\n      setCurrentGame({});\n      setInvitedUser({});\n    });\n\n    socket.on(\"error with saving game\", (message) => {\n      const endgameErrorNotification = {\n        title: \"Error With Saving Game\",\n        message,\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      };\n      store.addNotification(endgameErrorNotification);\n    });\n\n    socket.on(\"disconnect\", () => {\n      setCurrentGame({});\n      setInvitedUser({});\n      setCurrentUser({});\n      setActiveUsers([]);\n    });\n  }, [\n    setActiveUsers,\n    setCurrentUser,\n    setInvitedUser,\n    setCurrentGame,\n    setNotificationID,\n  ]);\n\n  useEffect(() => {\n    socket.off(\"invite canceled\");\n    socket.on(\"invite canceled\", () => {\n      socket.emit(\"invite rejected\");\n      removeNotification(notificationID);\n    });\n  }, [notificationID]);\n\n  return (\n    <SocketContext.Provider\n      value={{\n        socket,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n}\n\nexport function useSocket() {\n  return useContext(SocketContext);\n}\n","import axios from \"axios\";\n\nconst apiClient = axios.create({\n  baseURL: \"https://online-connect4.herokuapp.com\",\n  timeout: 10000,\n});\n\nasync function signupUser(userData) {\n  const res = await apiClient.post(\"/users/signup\", userData);\n  const data = await res.data;\n  return data;\n}\n\nasync function getGameListForUser(userId) {\n  return await apiClient.get(`/games/user/${userId}`);\n}\n\nasync function getActiveUsersList(userId) {\n  return await apiClient.get(`/users/active/${userId}`);\n}\n\nasync function createGame(player1Id, player2Id) {\n  return await apiClient.post(\"/games/create\", { player1Id, player2Id });\n}\n\nasync function getTypes() {\n  return await apiClient.get(\"/types\");\n}\n\nconst api = {\n  signupUser,\n  getGameListForUser,\n  getActiveUsersList,\n  createGame,\n  getTypes,\n};\n\nexport default api;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport api from \"../requests/api\";\n\nconst TypesContext = createContext({});\n\nexport default function TypesProvider({ children }) {\n  const [types, setTypes] = useState({});\n\n  useEffect(() => {\n    async function fetchTypes() {\n      let res = null;\n      try {\n        res = await api.getTypes();\n      } catch (err) {\n        console.log(err);\n        return;\n      }\n\n      const fetchedTypes = await res.data;\n      setTypes(fetchedTypes);\n    }\n\n    fetchTypes();\n  }, []);\n\n  return (\n    <TypesContext.Provider value={types}>{children}</TypesContext.Provider>\n  );\n}\n\nexport function useTypes() {\n  return useContext(TypesContext);\n}\n","import React from \"react\";\n\nexport default function GameCell({ state, index, onClick, custom, width }) {\n  function mapStateToColor(s) {\n    return [\"white\", \"red\", \"yellow\"][s];\n  }\n\n  if (custom === undefined) {\n    const calcRow = (i) => (i % 6) + 1;\n    const calcCol = (i) => (i - (calcRow(i) - 1)) / 6 + 1;\n\n    const row = calcRow(index);\n    const col = calcCol(index);\n\n    return (\n      <div\n        className=\"game-cell\"\n        onClick={(e) => onClick(e, row, col)}\n        style={{\n          borderRadius: \"50%\",\n          backgroundColor: mapStateToColor(state),\n          gridColumn: row,\n          gridRow: col,\n        }}\n      />\n    );\n  } else {\n    return (\n      <div\n        className=\"game-cell\"\n        style={{\n          borderRadius: \"50%\",\n          backgroundColor: mapStateToColor(state),\n          width,\n          height: width,\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { useTypes } from \"../contexts/TypesContext\";\n\nimport \"./Game.css\";\nimport GameCell from \"./GameCell\";\n\nexport default function Game({ playerColor, useWarning }) {\n  const { currentGame, setCurrentGame } = useGames();\n  const { currentUser, invitedUser } = useUsers();\n  const {\n    cell: { EMPTY },\n  } = useTypes();\n  const EMPTYCELL = EMPTY.toString();\n  const { socket } = useSocket();\n  const [_, setWarning] = useWarning();\n\n  function calculateColumnIndicies(col) {\n    const columnIndicies = [];\n    for (let k = 0; k < 6; k++) {\n      columnIndicies.push(col + k * 6);\n    }\n    columnIndicies.reverse();\n    return columnIndicies;\n  }\n\n  function getAvailableIndex(col) {\n    const columnIndicies = calculateColumnIndicies(col);\n\n    let availableIndex = -1;\n    for (let i of [...columnIndicies]) {\n      if (currentGame.state.charAt(i) !== EMPTYCELL) {\n        columnIndicies.shift();\n      } else {\n        availableIndex = i;\n        break;\n      }\n    }\n    return availableIndex;\n  }\n\n  function isMoveWinning(gameState) {\n    const isIdentical = (arr) => arr.every((v) => v === arr[0]);\n    const getDiagonalArrays = (arr) => {\n      const result = [];\n      const r = arr.length;\n      const c = arr[0].length;\n      const maxLength = Math.max(r, c);\n      let temp;\n      for (let i = 0; i <= (maxLength - 1) * 2; ++i) {\n        temp = [];\n        for (let y = r - 1; y >= 0; --y) {\n          let x = i - y;\n          if (x >= 0 && x < c) {\n            temp.push(arr[y][x]);\n          }\n        }\n\n        if (temp.length >= 4) {\n          result.push(temp);\n        }\n\n        temp = [];\n        for (let y = r - 1; y >= 0; --y) {\n          let x = i - (r - y);\n          if (x >= 0 && x < c) {\n            temp.push(arr[y][x]);\n          }\n        }\n\n        if (temp.length >= 4) {\n          result.push(temp);\n        }\n      }\n\n      return result;\n    };\n\n    const state = [];\n    for (let i = 0; i < 6; i++) {\n      let row = [];\n      for (let j = 0; j < 6; j++) {\n        row[j] = gameState.charAt(i * 6 + j);\n      }\n      state.push(row);\n    }\n\n    // Checking for horizontal and vertical\n    for (let r = 0; r < 6; r++) {\n      // Checking the horizontal rows\n      for (let c = 0; c < 3; c++) {\n        let currentRow = state[r].slice(c, c + 4);\n        if (isIdentical(currentRow) && currentRow[0] !== EMPTYCELL) {\n          return true;\n        }\n      }\n\n      // Checking the vertical columns\n      for (let c = 0; c < 3; c++) {\n        let currentCol = [];\n        for (let i = 0; i < 4; i++) {\n          currentCol.push(state[i + c][r]);\n        }\n        if (isIdentical(currentCol) && currentCol[0] !== EMPTYCELL) {\n          return true;\n        }\n      }\n    }\n\n    // Checking the diagonals\n    for (let arr of getDiagonalArrays(state)) {\n      let length = arr.length;\n      let k = length - 4;\n      for (let i = 0; i < k; i++) {\n        let currentArr = arr.slice(i, i + 4);\n        if (isIdentical(currentArr) && currentArr[0] !== EMPTYCELL) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function handleClick(_, col) {\n    if (currentGame.winner) {\n      setWarning(\"There is already a winner!\");\n      return;\n    } else if (playerColor === null) {\n      return;\n    }\n\n    col--;\n    const newGameState = currentGame.state.split(\"\").map((a) => parseInt(a));\n    const availableIndex = getAvailableIndex(col);\n\n    if (availableIndex >= 0) {\n      newGameState[availableIndex] = playerColor;\n      const newGameStateStr = newGameState.join(\"\");\n      const isThisAWin = isMoveWinning(newGameStateStr);\n      setCurrentGame((p) => {\n        const newGame = {\n          ...p,\n          state: newGameStateStr,\n          current_player: invitedUser.id,\n        };\n        if (isThisAWin) {\n          newGame.winner = currentUser.id;\n        }\n        socket.emit(\"update game\", newGame);\n        return newGame;\n      });\n    } else {\n      setWarning(\"Please choose another column\");\n    }\n  }\n\n  return (\n    <div className=\"game-container\">\n      {currentGame.state\n        .split(\"\")\n        .map((a) => parseInt(a))\n        .map((s, i) => (\n          <GameCell\n            state={s}\n            index={i}\n            onClick={handleClick}\n            key={`game-cell-${i}`}\n          />\n        ))}\n    </div>\n  );\n}\n","export const isObjectEmpty = (obj) => {\n  return Object.keys(obj).length === 0;\n}\n\nexport const evaluateUsersColors = (currentUser, invitedUser, game) => {\n  const colors = {\n    currentUserColor: null,\n    invitedUserColor: null,\n  };\n\n  if (game.player_1_id === currentUser.id) {\n    colors.currentUserColor = game.player_1_color;\n  } else if (game.player_1_id === invitedUser.id) {\n    colors.invitedUserColor = game.player_1_color;\n  }\n\n  if (game.player_2_id === currentUser.id) {\n    if (colors.currentUserColor) {\n      throw Error(\n        \"The game does not have distinct user id's for user 1 and user 2\"\n      );\n    }\n\n    colors.currentUserColor = game.player_2_color;\n  } else if (game.player_2_id === invitedUser.id) {\n    if (colors.invitedUserColor) {\n      throw Error(\n        \"The game does not have distinct user id's for user 1 and user 2\"\n      );\n    }\n\n    colors.invitedUserColor = game.player_2_color;\n  }\n\n  if (\n    !colors.currentUserColor ||\n    !colors.invitedUserColor ||\n    colors.currentUserColor === colors.invitedUserColor\n  ) {\n    throw Error(\n      `Problem with matching the user colors (${JSON.stringify(\n        colors,\n        null,\n        2\n      )})`\n    );\n  }\n  return colors;\n};","import React, { useEffect, useState } from \"react\";\nimport { store } from \"react-notifications-component\";\nimport Game from \"../components/Game\";\nimport GameCell from \"../components/GameCell\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { isObjectEmpty, evaluateUsersColors } from \"../utils/utils\";\n\nexport default function CurrentGamePage() {\n  const { currentUser, invitedUser } = useUsers();\n  const { currentGame } = useGames();\n  const [currentPlayer, setCurrentPlayer] = useState({});\n  const [{ currentUserColor, invitedUserColor }, setUserColors] = useState({});\n  const [warning, setWarning] = useState(\n    currentUser.id === currentPlayer.id\n      ? \"This is your turn\"\n      : \"This is your opponent's turn\"\n  );\n\n  const infoStyle = { color: \"green\", margin: 0 };\n\n  useEffect(() => {\n    if (\n      isObjectEmpty(currentGame) ||\n      isObjectEmpty(currentUser) ||\n      isObjectEmpty(invitedUser)\n    ) {\n      return;\n    }\n\n    // Adding a notification for the winner if it's added to the game\n    if (currentGame.winner) {\n      const winnerPlayer =\n        currentUser.id === currentGame.winner ? currentUser : invitedUser;\n      const winnerNotification = {\n        title: \"Winner\",\n        message: `${winnerPlayer.name} won this game!!!!!`,\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      };\n      store.addNotification(winnerNotification);\n    }\n\n    const currentPlayer =\n      currentGame.current_player === currentUser.id ? currentUser : invitedUser;\n\n    setCurrentPlayer(currentPlayer);\n    if (currentGame.winner) {\n      setWarning(\"There is a winner already!!\");\n    } else {\n      setWarning(\n        currentPlayer.id === currentUser.id\n          ? \"This is your turn\"\n          : \"This is your opponent's turn.\"\n      );\n    }\n    setUserColors(evaluateUsersColors(currentUser, invitedUser, currentGame));\n  }, [currentGame, currentUser, invitedUser]);\n\n  return isObjectEmpty(currentGame) ? (\n    <h1>Ending the game because one of the plyers left</h1>\n  ) : (\n    <div className=\"game-page-container\">\n      <div\n        className=\"game-page-header\"\n        style={{\n          textAlign: \"left\",\n          width: \"calc(70vw + 20px)\",\n          margin: \"20px auto\",\n          padding: \"0px\",\n          maxWidth: \"90vh\",\n        }}\n      >\n        <div\n          className=\"game-page-title\"\n          style={{\n            backgroundColor: \"lightgrey\",\n            padding: \"10px\",\n          }}\n        >\n          <h3 style={infoStyle}>\n            You: {currentUser.name}\n            <div style={{ float: \"right\" }}>\n              <GameCell state={currentUserColor} custom width=\"5vh\" />\n            </div>\n          </h3>\n          <br />\n          <h3 style={{ ...infoStyle, color: \"red\" }}>\n            Opponent: {invitedUser.name}\n            <div style={{ float: \"right\" }}>\n              <GameCell state={invitedUserColor} custom width=\"5vh\" />\n            </div>\n          </h3>\n        </div>\n        <div\n          className=\"stats-section\"\n          style={{ backgroundColor: \"lightgrey\", padding: 10 }}\n        >\n          <h3 style={{ ...infoStyle, color: \"blue\" }}>Stats:</h3>\n          <h5 style={{ margin: 0 }}>Current Player: {currentPlayer.name}</h5>\n          <h5 style={{ margin: 0 }}>\n            {currentGame.winner\n              ? `${\n                  currentGame.winner === currentUser.id\n                    ? currentUser.name\n                    : invitedUser.name\n                } is the winner!!!`\n              : \"No Winner Yet :(\"}\n          </h5>\n          <h5 style={{ margin: 0 }}>{warning}</h5>\n        </div>\n      </div>\n      <Game\n        useWarning={() => [warning, setWarning]}\n        playerColor={\n          currentPlayer.id === currentUser.id ? currentUserColor : null\n        }\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./SignupPage.css\";\nimport api from \"../requests/api\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { store } from \"react-notifications-component\";\n\nexport default function SignupPage() {\n  let { setCurrentUser } = useUsers();\n\n  let [name, setName] = useState(\"\");\n  let [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { socket } = useSocket();\n\n  function handleChange(e) {\n    setName(e.target.value);\n    setError(\"\");\n  }\n\n  async function submitForm(e) {\n    e.preventDefault();\n    let newUser = {};\n    setLoading(true);\n\n    const successSignupNotification = {\n      title: \"Signup Success\",\n      message: \"You have signup successfully successfully.\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true,\n      },\n    };\n\n    const failSignupNotification = {\n      title: \"Signup Failure\",\n      message: error,\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true,\n      },\n    };\n\n    try {\n      newUser = await api.signupUser({ name });\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.msg) {\n        setError(err.response.data.msg);\n      } else {\n        setError(\"Error with server\");\n      }\n      failSignupNotification.message = error || \"Error with server\";\n      store.addNotification(failSignupNotification);\n      setLoading(false);\n      return;\n    }\n\n    setCurrentUser(newUser);\n    socket.auth = { user: newUser };\n    socket.connect();\n    store.addNotification(successSignupNotification);\n    setLoading(false);\n  }\n\n  return (\n    <div className=\"signup-container\">\n      <label htmlFor=\"name\" className=\"name-label\">\n        Name:\n      </label>\n      <br />\n      <input\n        type=\"text\"\n        className=\"name-field\"\n        placeholder={error || \"Type your name here\"}\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n      />\n      <br />\n      <button\n        className=\"signup-submit-btn\"\n        onClick={submitForm}\n        disabled={loading}\n      >\n        Sign Up\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function ProtectedRoute({\n  component: Component,\n  isAuthenticated,\n  redirectPath,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isAuthenticated()) {\n          return <Component />;\n        } else {\n          return <Redirect to={redirectPath} />;\n        }\n      }}\n    />\n  );\n}\n","import React from \"react\";\n\nimport { useTypes } from \"../contexts/TypesContext\";\n\nconst matchUserStatus = (status, types) => {\n  const keys = Object.keys(types);\n  const values = Object.values(types);\n\n  const valIndex = values.indexOf(status);\n  if (!(valIndex >= 0)) {\n    return \"\";\n  }\n\n  return keys[valIndex].toLowerCase();\n};\n\nexport default function UserListItem({\n  user: { name, status, created_at },\n  onInvite,\n}) {\n  const { user: userTypes } = useTypes();\n  const createdAt = new Date(created_at);\n  return (\n    <div className=\"user-list-item\">\n      <h3 className=\"user-name\">{name}</h3>\n      <h4\n        className=\"user-status\"\n        style={{\n          textTransform: \"capitalize\",\n        }}\n      >\n        {matchUserStatus(status, userTypes)}\n        <br />\n        Joined Since{\" \"}\n        {`${createdAt.getMonth()}/${createdAt.getDate()}/${createdAt.getFullYear()}`}\n      </h4>\n      <button className=\"invite-btn\" onClick={onInvite}>\n        Invite To Game\n      </button>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Modal from \"react-modal\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { useUsers } from \"../contexts/UsersContext\";\n\nconst invitationStatusValues = {\n  PENDING: \"Pending Invitation Acceptance\",\n  ACCEPTED: \"Invitation Accepted\",\n  REJECTED: \"Invitation Rejected\",\n};\n\nexport default function InviteUserModal({ isOpen, setOpen }) {\n  const { invitedUser, setInvitedUser } = useUsers();\n  const { socket } = useSocket();\n  const [invitationStatus, setInvitationStatus] = useState(\n    invitationStatusValues.PENDING\n  );\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onAfterClose={() => {\n        setInvitationStatus(invitationStatusValues.PENDING);\n      }}\n      onAfterOpen={() => {\n        socket.emit(\"invite user\", invitedUser);\n\n        const inviteAcceptedHandler = () => {\n          setTimeout(() => {\n            setOpen(false);\n          }, 3000);\n          setInvitationStatus(invitationStatusValues.ACCEPTED);\n          socket.off(\"invited user accepted invite\", inviteAcceptedHandler);\n          socket.off(\"invited user rejected invite\", inviteRejectedHandler);\n        };\n\n        const inviteRejectedHandler = () => {\n          setTimeout(() => {\n            setOpen(false);\n          }, 3000);\n          setInvitedUser({});\n          setInvitationStatus(invitationStatusValues.REJECTED);\n          socket.off(\"invited user accepted invite\", inviteAcceptedHandler);\n          socket.off(\"invited user rejected invite\", inviteRejectedHandler);\n        };\n\n        socket.on(\"invited user accepted invite\", inviteAcceptedHandler);\n        socket.on(\"invited user rejected invite\", inviteRejectedHandler);\n      }}\n      style={{\n        content: {\n          width: \"fit-content\",\n          height: \"fit-content\",\n          margin: \"auto\",\n        },\n      }}\n    >\n      <h1>{invitationStatus}</h1>\n      <div>\n        <h3>Invited User Info:</h3>\n        <div style={{ margin: \"20px\" }}>\n          <strong>Username: {invitedUser.name}</strong>\n          <br />\n          <strong>Date Joined: {invitedUser.created_at}</strong>\n        </div>\n      </div>\n      <img\n        alt=\"loading animation gif\"\n        src=\"https://i.pinimg.com/originals/25/ef/28/25ef280441ad6d3a5ccf89960b4e95eb.gif\"\n      />\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useHistory } from \"react-router-dom\";\n\nimport UsersListItem from \"./UsersListItem\";\nimport InviteUserModal from \"./InviteUserModal\";\n\nimport { isObjectEmpty } from \"../utils/utils\";\n\nexport default function UsersList() {\n  const { activeUsers: users, setInvitedUser } = useUsers();\n  const { currentGame } = useGames();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (currentGame && !isObjectEmpty(currentGame)) {\n      history.push(\"/game\");\n    }\n  }, [currentGame, history]);\n\n  return (\n    <div>\n      <li className=\"users-list\">\n        {users.map((user) => (\n          <UsersListItem\n            user={user}\n            onInvite={() => {\n              setInvitedUser(user);\n              setIsModalOpen(true);\n            }}\n            key={`user-${user.id}`}\n          />\n        ))}\n      </li>\n      <InviteUserModal isOpen={isModalOpen} setOpen={setIsModalOpen} />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport CurrentGamePage from \"../pages/CurrentGamePage\";\nimport SignupPage from \"../pages/SignupPage\";\nimport { isObjectEmpty } from \"../utils/utils\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport UsersList from \"./UsersList\";\n\nexport default function Routes() {\n  const { currentUser, invitedUser, activeUsers } = useUsers();\n  const { currentGame } = useGames();\n\n  let [exists, setExists] = useState({\n    currentUser: false,\n    invitedUser: false,\n    currentGame: false,\n  });\n\n  useEffect(() => {\n    const newExists = {\n      currentUser: !isObjectEmpty(currentUser),\n      invitedUser: !isObjectEmpty(invitedUser),\n      currentGame: !isObjectEmpty(currentGame),\n    };\n    setExists(newExists);\n  }, [currentUser, invitedUser, currentGame, activeUsers, setExists]);\n\n  return (\n    <Switch>\n      <ProtectedRoute\n        exact\n        strict\n        path=\"/\"\n        isAuthenticated={() => false}\n        redirectPath=\"/signup\"\n        component={() => <></>}\n      />\n      <ProtectedRoute\n        exact\n        strict\n        path=\"/signup\"\n        isAuthenticated={() => !exists.currentUser}\n        redirectPath=\"/users-list\"\n        component={SignupPage}\n      />\n      <ProtectedRoute\n        exact\n        strict\n        path=\"/users-list\"\n        isAuthenticated={() => exists.currentUser}\n        redirectPath=\"/signup\"\n        component={UsersList}\n      />\n      <ProtectedRoute\n        exact\n        strict\n        path=\"/game\"\n        isAuthenticated={() =>\n          exists.currentGame && exists.currentUser && exists.invitedUser\n        }\n        redirectPath=\"/signup\"\n        component={CurrentGamePage}\n      />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useSocket } from \"../contexts/SocketConext\";\n\nexport default function LeaveGameButton() {\n  const { socket } = useSocket();\n  const { currentGame } = useGames();\n\n  return (\n    <button onClick={() => socket.emit(\"end game\", currentGame)}>\n      Leave Game\n    </button>\n  );\n}\n","import React from \"react\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { store } from \"react-notifications-component\";\n\nexport default function LogoutButton() {\n  const { socket } = useSocket();\n\n  function logout() {\n    socket.disconnect();\n    const logoutNotification = {\n      title: \"Logout\",\n      message: \"You have been logged out successfully.\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 1000,\n        onScreen: true,\n      },\n    };\n    store.addNotification(logoutNotification);\n  }\n\n  return (\n    <button onClick={logout} className=\"logout-btn\">\n      Logout\n    </button>\n  );\n}\n","import React from \"react\";\n\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { useGames } from \"../contexts/GamesContext\";\n\nimport LeaveGameButton from \"./LeaveGameButton\";\nimport LogoutButton from \"./LogoutButton\";\n\nimport { isObjectEmpty } from \"../utils/utils\";\n\nimport \"./Navbar.css\";\n\nexport default function Navbar() {\n  const { currentUser } = useUsers();\n  const { currentGame } = useGames();\n\n  const isAuthenticated = !isObjectEmpty(currentUser);\n  const gameExists = !isObjectEmpty(currentGame);\n  return (\n    <nav>\n      <ul className=\"nav-items\">\n        {isAuthenticated ? (\n          <li key=\"logout\" className=\"nav-item\">\n            <LogoutButton />\n          </li>\n        ) : (\n          <></>\n        )}\n        {gameExists ? (\n          <li key=\"leave-game\" className=\"nav-item\">\n            <LeaveGameButton />\n          </li>\n        ) : (\n          <></>\n        )}\n      </ul>\n    </nav>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport Routes from \"./components/Routes\";\n\nimport TypesProvider from \"./contexts/TypesContext\";\nimport UsersProvider from \"./contexts/UsersContext\";\nimport GamesProvider from \"./contexts/GamesContext\";\nimport SocketProvider from \"./contexts/SocketConext\";\n\nimport \"./App.css\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport Modal from \"react-modal\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  const appElement = useRef(null);\n\n  useEffect(() => {\n    Modal.setAppElement(appElement.current);\n  });\n\n  return (\n    <div className=\"App\" ref={appElement}>\n      <TypesProvider>\n        <UsersProvider>\n          <GamesProvider>\n            <SocketProvider>\n              <ReactNotification />\n              <Navbar />\n              <Router>\n                <Routes />\n              </Router>\n            </SocketProvider>\n          </GamesProvider>\n        </UsersProvider>\n      </TypesProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}