{"version":3,"sources":["contexts/GamesContext.js","contexts/UsersContext.js","components/InvitationNotification.js","consts.js","contexts/SocketConext.js","requests/api.js","contexts/TypesContext.js","components/GameCell.js","components/Game.js","utils/utils.js","pages/CurrentGamePage.js","pages/SignupPage.js","components/ProtectedRoute.js","components/UsersListItem.js","components/InviteUserModal.js","components/UsersList.js","components/Routes.js","components/LeaveGameButton.js","components/LogoutButton.js","components/Navbar.js","App.js","index.js"],"names":["initialGamesValue","currentGame","prevGames","GamesContext","createContext","GamesProvider","children","useState","setCurrentGame","setPrevGames","Provider","value","useGames","useContext","initialUsersState","currentUser","invitedUser","activeUsers","UsersContext","UsersProvider","setCurrentUser","setInvitedUser","setActiveUsers","useUsers","InvitationNotification","id","socket","useSocket","colorScheme","onClick","emit","removeNotification","notifications","baseURL","io","autoConnect","SocketContext","SocketProvider","notificationID","setNotificationID","useEffect","on","users","invitingUser","name","Math","random","notification","title","container","type","dismiss","duration","click","touch","showIcon","pauseOnHover","message","addNotification","addInviteNotification","game","newCurrentUser","newInvitedUser","newGame","store","insert","animationIn","animationOut","onScreen","endgameErrorNotification","off","apiClient","axios","create","timeout","userData","a","post","res","data","userId","get","player1Id","player2Id","api","signupUser","getGameListForUser","getActiveUsersList","createGame","getTypes","TypesContext","TypesProvider","types","setTypes","console","log","fetchedTypes","fetchTypes","useTypes","GameCell","i","state","index","custom","width","mapStateToColor","s","undefined","calcRow","row","col","w","h","e","bgColor","Game","playerColor","useWarning","EMPTYCELL","cell","EMPTY","toString","setWarning","handleClick","_","winner","newGameState","split","map","parseInt","availableIndex","columnIndicies","k","push","reverse","calculateColumnIndicies","charAt","shift","getAvailableIndex","newGameStateStr","join","isThisAWin","gameState","isIdentical","arr","every","v","j","r","c","currentRow","slice","currentCol","temp","result","length","maxLength","max","y","x","getDiagonalArrays","currentArr","isMoveWinning","p","current_player","minH","minW","display","gridTemplateColumns","gridTemplateRows","gridGap","borderRadius","isObjectEmpty","obj","Object","keys","formatDate","createdAt","getMonth","getDate","getFullYear","CurrentGamePage","currentPlayer","setCurrentPlayer","currentUserColor","invitedUserColor","setUserColors","warning","winnerPlayer","winnerNotification","colors","player_1_id","player_1_color","player_2_id","Error","player_2_color","JSON","stringify","evaluateUsersColors","maxW","mx","my","textAlign","justify","px","py","size","color","SignupPage","setName","error","setError","loading","setLoading","preventDefault","newUser","successSignupNotification","failSignupNotification","response","msg","auth","user","connect","justifyContent","m","onSubmit","as","isRequired","placeholder","onChange","target","mt","disabled","ProtectedRoute","Component","component","isAuthenticated","redirectPath","rest","render","to","UserListItem","status","created_at","onInvite","userTypes","Date","isUserActive","valIndex","values","indexOf","toLowerCase","matchUserStatus","HStack","label","bg","invitationStatusValues","InviteUserModal","isOpen","setOpen","invitationStatus","setInvitationStatus","onOpen","useCallback","inviteAcceptedHandler","setTimeout","inviteRejectedHandler","closeOnOverlayClick","closeOnEsc","isCentered","onClose","pb","ml","isIndeterminate","UsersList","isModalOpen","setIsModalOpen","history","useHistory","VStack","Routes","exists","setExists","newExists","exact","strict","path","LeaveGameButton","LogoutButton","disconnect","Navbar","gameExists","alignItems","flexGrow","App","appElement","useRef","Modal","setAppElement","current","className","ref","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc97c2e3.chunk.js","sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\n\nconst initialGamesValue = {\n  currentGame: {},\n  prevGames: [],\n};\n\nconst GamesContext = createContext(initialGamesValue);\n\nexport default function GamesProvider({ children }) {\n  const [currentGame, setCurrentGame] = useState(initialGamesValue.currentGame);\n  const [prevGames, setPrevGames] = useState(initialGamesValue.prevGames);\n\n  return (\n    <GamesContext.Provider\n      value={{\n        currentGame,\n        setCurrentGame,\n        prevGames,\n        setPrevGames,\n      }}\n    >\n      {children}\n    </GamesContext.Provider>\n  );\n}\n\nexport function useGames() {\n  return useContext(GamesContext);\n}\n","import React, { createContext, useContext, useState } from \"react\";\n\nconst initialUsersState = {\n  currentUser: {},\n  invitedUser: {},\n  activeUsers: [],\n};\nconst UsersContext = createContext(initialUsersState);\n\nexport default function UsersProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(initialUsersState.currentUser);\n  const [invitedUser, setInvitedUser] = useState(initialUsersState.invitedUser);\n  const [activeUsers, setActiveUsers] = useState(initialUsersState.activeUsers);\n\n  return (\n    <UsersContext.Provider\n      value={{\n        currentUser,\n        setCurrentUser,\n        invitedUser,\n        setInvitedUser,\n        activeUsers,\n        setActiveUsers,\n      }}\n    >\n      {children}\n    </UsersContext.Provider>\n  );\n}\n\nexport function useUsers() {\n  return useContext(UsersContext);\n}\n","import React from \"react\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { store as notifications } from \"react-notifications-component\";\nimport { Box } from \"@chakra-ui/layout\";\nimport { Button, ButtonGroup } from \"@chakra-ui/button\";\n\nexport default function InvitationNotification({ id }) {\n  const { socket } = useSocket();\n\n  return (\n    <Box>\n      <ButtonGroup>\n        <Button\n          colorScheme=\"green\"\n          onClick={() => {\n            socket.emit(\"invite accepted\");\n            removeNotification(id);\n          }}\n        >\n          Accept\n        </Button>\n        <Button\n          colorScheme=\"red\"\n          onClick={() => {\n            socket.emit(\"invite rejected\");\n            removeNotification(id);\n          }}\n        >\n          Reject\n        </Button>\n      </ButtonGroup>\n    </Box>\n  );\n}\n\nexport function addInviteNotification(invitingUser) {\n  const notificationID = `notification-for:${invitingUser.name}-(${\n    invitingUser.id\n  })-(${Math.random() * 1000})`;\n  removeNotification(notificationID);\n  const notification = {\n    id: notificationID,\n    title: `A new invite has been sent from ${invitingUser.name}`,\n    container: \"top-right\",\n    type: \"info\",\n    dismiss: {\n      duration: 0,\n      click: false,\n      touch: false,\n      showIcon: false,\n      pauseOnHover: true,\n    },\n    message: <InvitationNotification id={notificationID} />,\n  };\n  return notifications.addNotification(notification);\n}\n\nexport function removeNotification(id) {\n  notifications.removeNotification(id);\n}\n","const DEBUG = process.env.REACT_APP_DEBUG === \"true\";\nconst baseURL = DEBUG\n  ? \"http://10.0.0.218:5000\"\n  : \"https://online-connect4.herokuapp.com\";\n\nexport { baseURL };\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { store } from \"react-notifications-component\";\nimport { io } from \"socket.io-client\";\nimport {\n  addInviteNotification,\n  removeNotification,\n} from \"../components/InvitationNotification\";\nimport { baseURL } from \"../consts\";\nimport { useGames } from \"./GamesContext\";\nimport { useUsers } from \"./UsersContext\";\n\nconst socket = io(baseURL, { autoConnect: false });\n\nconst SocketContext = createContext();\n\nexport default function SocketProvider({ children }) {\n  const { setActiveUsers, setCurrentUser, setInvitedUser } = useUsers();\n  const { setCurrentGame } = useGames();\n  const [notificationID, setNotificationID] = useState(null);\n\n  useEffect(() => {\n    socket.on(\"auu\", (users) => {\n      setActiveUsers(users);\n    });\n\n    socket.on(\"notify of invite\", (invitingUser) => {\n      setNotificationID(addInviteNotification(invitingUser));\n    });\n\n    socket.on(\n      \"game created\",\n      ({ game, currentUser: newCurrentUser, invitedUser: newInvitedUser }) => {\n        setCurrentGame(game);\n        setCurrentUser(newCurrentUser);\n        setInvitedUser(newInvitedUser);\n      }\n    );\n\n    socket.on(\"game has changed\", (newGame) => {\n      setCurrentGame(newGame);\n    });\n\n    socket.on(\"game has ended\", () => {\n      const gameEndNotification = {\n        title: \"Game Ended\",\n        message:\n          \"The game was ended because the other player either left the game or logged out of his account\",\n        type: \"warning\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      };\n      store.addNotification(gameEndNotification);\n      setCurrentGame({});\n      setInvitedUser({});\n    });\n\n    socket.on(\"clear game\", () => {\n      setCurrentGame({});\n      setInvitedUser({});\n    });\n\n    socket.on(\"error with saving game\", (message) => {\n      const endgameErrorNotification = {\n        title: \"Error With Saving Game\",\n        message,\n        type: \"danger\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      };\n      store.addNotification(endgameErrorNotification);\n    });\n\n    socket.on(\"disconnect\", () => {\n      setCurrentGame({});\n      setInvitedUser({});\n      setCurrentUser({});\n      setActiveUsers([]);\n    });\n  }, [\n    setActiveUsers,\n    setCurrentUser,\n    setInvitedUser,\n    setCurrentGame,\n    setNotificationID,\n  ]);\n\n  useEffect(() => {\n    socket.off(\"invite canceled\");\n    socket.on(\"invite canceled\", () => {\n      socket.emit(\"invite rejected\");\n      removeNotification(notificationID);\n    });\n  }, [notificationID]);\n\n  return (\n    <SocketContext.Provider\n      value={{\n        socket,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n}\n\nexport function useSocket() {\n  return useContext(SocketContext);\n}\n","import axios from \"axios\";\nimport { baseURL } from \"../consts\";\n\nconst apiClient = axios.create({\n  baseURL: baseURL,\n  timeout: 10000,\n});\n\nasync function signupUser(userData) {\n  const res = await apiClient.post(\"/users/signup\", userData);\n  const data = await res.data;\n  return data;\n}\n\nasync function getGameListForUser(userId) {\n  return await apiClient.get(`/games/user/${userId}`);\n}\n\nasync function getActiveUsersList(userId) {\n  return await apiClient.get(`/users/active/${userId}`);\n}\n\nasync function createGame(player1Id, player2Id) {\n  return await apiClient.post(\"/games/create\", { player1Id, player2Id });\n}\n\nasync function getTypes() {\n  return await apiClient.get(\"/types\");\n}\n\nconst api = {\n  signupUser,\n  getGameListForUser,\n  getActiveUsersList,\n  createGame,\n  getTypes,\n};\n\nexport default api;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport api from \"../requests/api\";\n\nconst TypesContext = createContext({});\n\nexport default function TypesProvider({ children }) {\n  const [types, setTypes] = useState({});\n\n  useEffect(() => {\n    async function fetchTypes() {\n      let res = null;\n      try {\n        res = await api.getTypes();\n      } catch (err) {\n        console.log(err);\n        return;\n      }\n\n      const fetchedTypes = await res.data;\n      setTypes(fetchedTypes);\n    }\n\n    fetchTypes();\n  }, []);\n\n  return (\n    <TypesContext.Provider value={types}>{children}</TypesContext.Provider>\n  );\n}\n\nexport function useTypes() {\n  return useContext(TypesContext);\n}\n","import { Circle } from \"@chakra-ui/layout\";\nimport React from \"react\";\n\nexport default function GameCell({ state, index, onClick, custom, width }) {\n  function mapStateToColor(s) {\n    return [\"white\", \"red.500\", \"yellow.500\"][s];\n  }\n\n  if (custom === undefined) {\n    const calcRow = (i) => (i % 6) + 1;\n    const calcCol = (i) => (i - (calcRow(i) - 1)) / 6 + 1;\n\n    const row = calcRow(index);\n    const col = calcCol(index);\n\n    return (\n      <Circle\n        w={width}\n        h={width}\n        onClick={(e) => onClick(e, row, col)}\n        bgColor={mapStateToColor(state)}\n      />\n    );\n  } else {\n    return <Circle w={width} h={width} bgColor={mapStateToColor(state)} />;\n  }\n}\n","import React from \"react\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { useTypes } from \"../contexts/TypesContext\";\n\nimport GameCell from \"./GameCell\";\nimport { Box } from \"@chakra-ui/layout\";\n\nexport default function Game({ playerColor, useWarning }) {\n  const { currentGame, setCurrentGame } = useGames();\n  const { currentUser, invitedUser } = useUsers();\n  const {\n    cell: { EMPTY },\n  } = useTypes();\n  const EMPTYCELL = EMPTY.toString();\n  const { socket } = useSocket();\n  const [_, setWarning] = useWarning();\n\n  function calculateColumnIndicies(col) {\n    const columnIndicies = [];\n    for (let k = 0; k < 6; k++) {\n      columnIndicies.push(col + k * 6);\n    }\n    columnIndicies.reverse();\n    return columnIndicies;\n  }\n\n  function getAvailableIndex(col) {\n    const columnIndicies = calculateColumnIndicies(col);\n\n    let availableIndex = -1;\n    for (let i of [...columnIndicies]) {\n      if (currentGame.state.charAt(i) !== EMPTYCELL) {\n        columnIndicies.shift();\n      } else {\n        availableIndex = i;\n        break;\n      }\n    }\n    return availableIndex;\n  }\n\n  function isMoveWinning(gameState) {\n    const isIdentical = (arr) => arr.every((v) => v === arr[0]);\n    const getDiagonalArrays = (arr) => {\n      const result = [];\n      const r = arr.length;\n      const c = arr[0].length;\n      const maxLength = Math.max(r, c);\n      let temp;\n      for (let i = 0; i <= (maxLength - 1) * 2; ++i) {\n        temp = [];\n        for (let y = r - 1; y >= 0; --y) {\n          let x = i - y;\n          if (x >= 0 && x < c) {\n            temp.push(arr[y][x]);\n          }\n        }\n\n        if (temp.length >= 4) {\n          result.push(temp);\n        }\n\n        temp = [];\n        for (let y = r - 1; y >= 0; --y) {\n          let x = i - (r - y);\n          if (x >= 0 && x < c) {\n            temp.push(arr[y][x]);\n          }\n        }\n\n        if (temp.length >= 4) {\n          result.push(temp);\n        }\n      }\n\n      return result;\n    };\n\n    const state = [];\n    for (let i = 0; i < 6; i++) {\n      let row = [];\n      for (let j = 0; j < 6; j++) {\n        row[j] = gameState.charAt(i * 6 + j);\n      }\n      state.push(row);\n    }\n\n    // Checking for horizontal and vertical\n    for (let r = 0; r < 6; r++) {\n      // Checking the horizontal rows\n      for (let c = 0; c < 3; c++) {\n        let currentRow = state[r].slice(c, c + 4);\n        if (isIdentical(currentRow) && currentRow[0] !== EMPTYCELL) {\n          return true;\n        }\n      }\n\n      // Checking the vertical columns\n      for (let c = 0; c < 3; c++) {\n        let currentCol = [];\n        for (let i = 0; i < 4; i++) {\n          currentCol.push(state[i + c][r]);\n        }\n        if (isIdentical(currentCol) && currentCol[0] !== EMPTYCELL) {\n          return true;\n        }\n      }\n    }\n\n    // Checking the diagonals\n    for (let arr of getDiagonalArrays(state)) {\n      let length = arr.length;\n      let k = length - 4;\n      for (let i = 0; i < k; i++) {\n        let currentArr = arr.slice(i, i + 4);\n        if (isIdentical(currentArr) && currentArr[0] !== EMPTYCELL) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function handleClick(_, col) {\n    if (currentGame.winner) {\n      setWarning(\"There is already a winner!\");\n      return;\n    } else if (playerColor === null) {\n      return;\n    }\n\n    col--;\n    const newGameState = currentGame.state.split(\"\").map((a) => parseInt(a));\n    const availableIndex = getAvailableIndex(col);\n\n    if (availableIndex >= 0) {\n      newGameState[availableIndex] = playerColor;\n      const newGameStateStr = newGameState.join(\"\");\n      const isThisAWin = isMoveWinning(newGameStateStr);\n      setCurrentGame((p) => {\n        const newGame = {\n          ...p,\n          state: newGameStateStr,\n          current_player: invitedUser.id,\n        };\n        if (isThisAWin) {\n          newGame.winner = currentUser.id;\n        }\n        socket.emit(\"update game\", newGame);\n        return newGame;\n      });\n    } else {\n      setWarning(\"Please choose another column\");\n    }\n  }\n\n  return (\n    <Box\n      bgColor=\"blue.500\"\n      minH=\"500px\"\n      minW=\"500px\"\n      display=\"grid\"\n      gridTemplateColumns=\"repeat(6, 1fr)\"\n      gridTemplateRows=\"repeat(6, 1fr)\"\n      gridGap=\"10px\"\n      p=\"10px\"\n      borderRadius=\"15px\"\n    >\n      {currentGame.state\n        .split(\"\")\n        .map((a) => parseInt(a))\n        .map((s, i) => (\n          <GameCell\n            state={s}\n            index={i}\n            onClick={handleClick}\n            key={`game-cell-${i}`}\n          />\n        ))}\n    </Box>\n  );\n}\n","export const isObjectEmpty = (obj) => {\n  return Object.keys(obj).length === 0;\n};\nexport const matchUserStatus = (status, types) => {\n  const keys = Object.keys(types);\n  const values = Object.values(types);\n\n  const valIndex = values.indexOf(status);\n  if (!(valIndex >= 0)) {\n    return \"\";\n  }\n\n  return keys[valIndex].toLowerCase();\n};\n\nexport function isActive(userStatusString) {\n  return userStatusString === \"active\";\n}\n\nexport function formatDate(createdAt) {\n  return `${createdAt.getMonth()}/${createdAt.getDate()}/${createdAt.getFullYear()}`;\n}\n\nexport const evaluateUsersColors = (currentUser, invitedUser, game) => {\n  const colors = {\n    currentUserColor: null,\n    invitedUserColor: null,\n  };\n\n  if (game.player_1_id === currentUser.id) {\n    colors.currentUserColor = game.player_1_color;\n  } else if (game.player_1_id === invitedUser.id) {\n    colors.invitedUserColor = game.player_1_color;\n  }\n\n  if (game.player_2_id === currentUser.id) {\n    if (colors.currentUserColor) {\n      throw Error(\n        \"The game does not have distinct user id's for user 1 and user 2\"\n      );\n    }\n\n    colors.currentUserColor = game.player_2_color;\n  } else if (game.player_2_id === invitedUser.id) {\n    if (colors.invitedUserColor) {\n      throw Error(\n        \"The game does not have distinct user id's for user 1 and user 2\"\n      );\n    }\n\n    colors.invitedUserColor = game.player_2_color;\n  }\n\n  if (\n    !colors.currentUserColor ||\n    !colors.invitedUserColor ||\n    colors.currentUserColor === colors.invitedUserColor\n  ) {\n    throw Error(\n      `Problem with matching the user colors (${JSON.stringify(\n        colors,\n        null,\n        2\n      )})`\n    );\n  }\n  return colors;\n};\n","import { Box, Heading, HStack, VStack } from \"@chakra-ui/layout\";\nimport React, { useEffect, useState } from \"react\";\nimport { store } from \"react-notifications-component\";\nimport Game from \"../components/Game\";\nimport GameCell from \"../components/GameCell\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { isObjectEmpty, evaluateUsersColors } from \"../utils/utils\";\n\nexport default function CurrentGamePage() {\n  const { currentUser, invitedUser } = useUsers();\n  const { currentGame } = useGames();\n  const [currentPlayer, setCurrentPlayer] = useState({});\n  const [{ currentUserColor, invitedUserColor }, setUserColors] = useState({});\n  const [warning, setWarning] = useState(\n    currentUser.id === currentPlayer.id\n      ? \"This is your turn\"\n      : \"This is your opponent's turn\"\n  );\n\n  useEffect(() => {\n    if (\n      isObjectEmpty(currentGame) ||\n      isObjectEmpty(currentUser) ||\n      isObjectEmpty(invitedUser)\n    ) {\n      return;\n    }\n\n    // Adding a notification for the winner if it's added to the game\n    if (currentGame.winner) {\n      const winnerPlayer =\n        currentUser.id === currentGame.winner ? currentUser : invitedUser;\n      const winnerNotification = {\n        title: \"Winner\",\n        message: `${winnerPlayer.name} won this game!!!!!`,\n        type: \"success\",\n        insert: \"top\",\n        container: \"top-right\",\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n        dismiss: {\n          duration: 5000,\n          onScreen: true,\n        },\n      };\n      store.addNotification(winnerNotification);\n    }\n\n    const currentPlayer =\n      currentGame.current_player === currentUser.id ? currentUser : invitedUser;\n\n    setCurrentPlayer(currentPlayer);\n    if (currentGame.winner) {\n      setWarning(\"There is a winner already!!\");\n    } else {\n      setWarning(\n        currentPlayer.id === currentUser.id\n          ? \"This is your turn\"\n          : \"This is your opponent's turn.\"\n      );\n    }\n    setUserColors(evaluateUsersColors(currentUser, invitedUser, currentGame));\n  }, [currentGame, currentUser, invitedUser]);\n\n  return isObjectEmpty(currentGame) ? (\n    <Heading>Ending the game because one of the plyers left</Heading>\n  ) : (\n    <HStack\n      bgColor=\"gray.100\"\n      h=\"fit-content\"\n      maxW=\"750px\"\n      mx=\"auto\"\n      p={3}\n      borderRadius=\"15px\"\n      my={3}\n    >\n      <VStack textAlign=\"left\" w=\"100%\">\n        <VStack w=\"100%\">\n          <HStack\n            justify=\"space-between\"\n            px={2}\n            w=\"100%\"\n            bgColor=\"blue.200\"\n            borderRadius=\"15px\"\n            py={2}\n          >\n            <Heading size=\"sm\" color=\"green\">\n              You: {currentUser.name}\n            </Heading>\n            <GameCell state={currentUserColor} custom width=\"5vh\" />\n          </HStack>\n          <HStack\n            justify=\"space-between\"\n            px={2}\n            w=\"100%\"\n            bgColor=\"blue.200\"\n            borderRadius=\"15px\"\n            py={2}\n          >\n            <Heading size=\"sm\" color=\"red\">\n              Opponent: {invitedUser.name}\n            </Heading>\n            <GameCell state={invitedUserColor} custom width=\"5vh\" />\n          </HStack>\n        </VStack>\n        <Box w=\"100%\">\n          <Heading size=\"md\" color=\"blue.500\">\n            Stats:\n          </Heading>\n          <Heading size=\"sm\">Current Player: {currentPlayer.name}</Heading>\n          <Heading size=\"sm\">\n            Winner:{\" \"}\n            {currentGame.winner\n              ? currentGame.winner === currentUser.id\n                ? currentUser.name\n                : invitedUser.name\n              : \"Not Yet :(\"}\n          </Heading>\n          <Heading size=\"sm\" color=\"yellow.600\">\n            {warning}\n          </Heading>\n        </Box>\n      </VStack>\n      <Game\n        useWarning={() => [warning, setWarning]}\n        playerColor={\n          currentPlayer.id === currentUser.id ? currentUserColor : null\n        }\n      />\n    </HStack>\n  );\n}\n","import React, { useState } from \"react\";\n// import \"./SignupPage.css\";\nimport api from \"../requests/api\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { store } from \"react-notifications-component\";\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  VStack,\n} from \"@chakra-ui/react\";\n\nexport default function SignupPage() {\n  let { setCurrentUser } = useUsers();\n\n  let [name, setName] = useState(\"\");\n  let [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const { socket } = useSocket();\n\n  function handleChange(e) {\n    setName(e.target.value);\n    setError(\"\");\n  }\n\n  async function submitForm(e) {\n    e.preventDefault();\n    let newUser = {};\n    setLoading(true);\n\n    const successSignupNotification = {\n      title: \"Signup Success\",\n      message: \"You have signup successfully successfully.\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true,\n      },\n    };\n\n    const failSignupNotification = {\n      title: \"Signup Failure\",\n      message: error,\n      type: \"danger\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 5000,\n        onScreen: true,\n      },\n    };\n\n    try {\n      newUser = await api.signupUser({ name });\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.msg) {\n        setError(err.response.data.msg);\n      } else {\n        setError(\"Error with server\");\n      }\n      failSignupNotification.message = error || \"Error with server\";\n      store.addNotification(failSignupNotification);\n      setLoading(false);\n      return;\n    }\n\n    setCurrentUser(newUser);\n    socket.auth = { user: newUser };\n    socket.connect();\n    store.addNotification(successSignupNotification);\n    setLoading(false);\n  }\n\n  return (\n    <VStack justifyContent=\"center\" h=\"100vh\">\n      <Heading m={10}>Welcome To Online Connect 4</Heading>\n      <FormControl\n        onSubmit={submitForm}\n        as=\"form\"\n        id=\"signup-form\"\n        w=\"500px\"\n        minW=\"300px\"\n        maxW=\"500px\"\n        p={5}\n        mx=\"auto\"\n        borderRadius=\"15px\"\n        isRequired\n      >\n        <FormLabel color=\"blue.900\">Name</FormLabel>\n        <Input\n          colorScheme=\"blue\"\n          name=\"name\"\n          type=\"text\"\n          placeholder={error || \"Type your name here...\"}\n          value={name}\n          onChange={handleChange}\n        />\n        <Button mt={5} type=\"submit\" disabled={loading} colorScheme=\"yellow\">\n          {!loading ? \"Proceed to Game\" : \"Loading...\"}\n        </Button>\n      </FormControl>\n    </VStack>\n  );\n}\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport default function ProtectedRoute({\n  component: Component,\n  isAuthenticated,\n  redirectPath,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isAuthenticated()) {\n          return <Component />;\n        } else {\n          return <Redirect to={redirectPath} />;\n        }\n      }}\n    />\n  );\n}\n","import { Button } from \"@chakra-ui/button\";\nimport { Circle, Heading, HStack, ListItem } from \"@chakra-ui/layout\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport React from \"react\";\n\nimport { useTypes } from \"../contexts/TypesContext\";\nimport { formatDate, isActive, matchUserStatus } from \"../utils/utils\";\n\nexport default function UserListItem({\n  user: { name, status, created_at },\n  onInvite,\n}) {\n  const { user: userTypes } = useTypes();\n  const createdAt = new Date(created_at);\n  const isUserActive = isActive(matchUserStatus(status, userTypes));\n  return (\n    <ListItem\n      as={HStack}\n      borderRadius=\"15px\"\n      bgColor=\"blue.200\"\n      p={5}\n      my={5}\n      w=\"100%\"\n      justifyContent=\"space-between\"\n    >\n      <Heading size=\"md\">{name}</Heading>\n      <Tooltip label={isUserActive ? \"User is Active\" : \"User Not Active\"}>\n        <Circle size=\"10px\" bg={isUserActive ? \"green\" : \"red\"} />\n      </Tooltip>\n      <Heading size=\"sm\">Active Since: {formatDate(createdAt)}</Heading>\n      <Button onClick={onInvite} colorScheme=\"green\">\n        Invite To A Game\n      </Button>\n    </ListItem>\n  );\n}\n","import { Box, Heading, Text } from \"@chakra-ui/layout\";\nimport {\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from \"@chakra-ui/modal\";\nimport { CircularProgress } from \"@chakra-ui/progress\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { formatDate } from \"../utils/utils\";\n\nconst invitationStatusValues = {\n  PENDING: \"Pending Invitation Acceptance\",\n  ACCEPTED: \"Invitation Accepted\",\n  REJECTED: \"Invitation Rejected\",\n};\n\nexport default function InviteUserModal({ isOpen, setOpen }) {\n  const { invitedUser, setInvitedUser } = useUsers();\n  const { socket } = useSocket();\n  const [invitationStatus, setInvitationStatus] = useState(\n    invitationStatusValues.PENDING\n  );\n\n  const onOpen = useCallback(() => {\n    socket.emit(\"invite user\", invitedUser);\n\n    const inviteAcceptedHandler = () => {\n      setTimeout(() => {\n        setOpen(false);\n        setInvitationStatus(invitationStatusValues.ACCEPTED);\n        socket.off(\"invited user accepted invite\", inviteAcceptedHandler);\n        socket.off(\"invited user rejected invite\", inviteRejectedHandler);\n      }, 3000);\n    };\n\n    const inviteRejectedHandler = () => {\n      setTimeout(() => {\n        setOpen(false);\n        setInvitedUser({});\n        setInvitationStatus(invitationStatusValues.REJECTED);\n        socket.off(\"invited user accepted invite\", inviteAcceptedHandler);\n        socket.off(\"invited user rejected invite\", inviteRejectedHandler);\n      }, 3000);\n    };\n\n    socket.on(\"invited user accepted invite\", inviteAcceptedHandler);\n    socket.on(\"invited user rejected invite\", inviteRejectedHandler);\n  }, [socket, invitedUser, setInvitedUser, setOpen]);\n\n  const onClose = () => {\n    setInvitationStatus(invitationStatusValues.PENDING);\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      onOpen();\n    }\n  }, [isOpen, onOpen]);\n\n  const { name, created_at } = invitedUser;\n  return (\n    <Modal\n      closeOnOverlayClick={false}\n      closeOnEsc={false}\n      isOpen={isOpen}\n      isCentered\n      onClose={onClose}\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>{invitationStatus}</ModalHeader>\n        <ModalBody pb={6}>\n          <Heading size=\"sm\">Invited User Info:</Heading>\n          <Box ml={5}>\n            <Text>Name: {name}</Text>\n            <Text>Date Joined: {formatDate(new Date(created_at))}</Text>\n          </Box>\n          <Box display=\"flex\" mt={5}>\n            <CircularProgress\n              mx=\"auto\"\n              isIndeterminate\n              size=\"100%\"\n              color=\"green\"\n            />\n          </Box>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useHistory } from \"react-router-dom\";\n\nimport UsersListItem from \"./UsersListItem\";\nimport InviteUserModal from \"./InviteUserModal\";\n\nimport { isObjectEmpty } from \"../utils/utils\";\nimport { Box, Heading, List, VStack } from \"@chakra-ui/layout\";\n\nexport default function UsersList() {\n  const { activeUsers: users, setInvitedUser } = useUsers();\n  const { currentGame } = useGames();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (currentGame && !isObjectEmpty(currentGame)) {\n      history.push(\"/game\");\n    }\n  }, [currentGame, history]);\n\n  return (\n    <Box w=\"500px\" mx=\"auto\">\n      <Heading size=\"lg\" textAlign=\"left\" my={5}>\n        Players in the Lobby\n      </Heading>\n      {users.length === 0 ? (\n        <Heading size=\"md\" color=\"red\">\n          No Users Are Currently in the Lobby! :( <br />\n          Please wait for someone to join.\n        </Heading>\n      ) : (\n        <List as={VStack}>\n          {users.map((user) => (\n            <UsersListItem\n              user={user}\n              onInvite={() => {\n                setInvitedUser(user);\n                setIsModalOpen(true);\n              }}\n              key={`user-${user.id}`}\n            />\n          ))}\n        </List>\n      )}\n      <InviteUserModal isOpen={isModalOpen} setOpen={setIsModalOpen} />\n    </Box>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useUsers } from \"../contexts/UsersContext\";\nimport CurrentGamePage from \"../pages/CurrentGamePage\";\nimport SignupPage from \"../pages/SignupPage\";\nimport { isObjectEmpty } from \"../utils/utils\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport UsersList from \"./UsersList\";\n\nexport default function Routes() {\n  const { currentUser, invitedUser, activeUsers } = useUsers();\n  const { currentGame } = useGames();\n\n  let [exists, setExists] = useState({\n    currentUser: false,\n    invitedUser: false,\n    currentGame: false,\n  });\n\n  useEffect(() => {\n    const newExists = {\n      currentUser: !isObjectEmpty(currentUser),\n      invitedUser: !isObjectEmpty(invitedUser),\n      currentGame: !isObjectEmpty(currentGame),\n    };\n    setExists(newExists);\n  }, [currentUser, invitedUser, currentGame, activeUsers, setExists]);\n\n  return (\n    <Switch>\n      <ProtectedRoute\n        exact\n        strict\n        path=\"/\"\n        isAuthenticated={() => false}\n        redirectPath=\"/signup\"\n        component={() => <></>}\n      />\n      <ProtectedRoute\n        exact\n        strict\n        path=\"/signup\"\n        isAuthenticated={() => !exists.currentUser}\n        redirectPath=\"/users-list\"\n        component={SignupPage}\n      />\n      <ProtectedRoute\n        exact\n        strict\n        path=\"/users-list\"\n        isAuthenticated={() => exists.currentUser}\n        redirectPath=\"/signup\"\n        component={UsersList}\n      />\n      <ProtectedRoute\n        exact\n        strict\n        path=\"/game\"\n        isAuthenticated={() =>\n          exists.currentGame && exists.currentUser && exists.invitedUser\n        }\n        redirectPath=\"/signup\"\n        component={CurrentGamePage}\n      />\n    </Switch>\n  );\n}\n","import { Button } from \"@chakra-ui/button\";\nimport React from \"react\";\nimport { useGames } from \"../contexts/GamesContext\";\nimport { useSocket } from \"../contexts/SocketConext\";\n\nexport default function LeaveGameButton() {\n  const { socket } = useSocket();\n  const { currentGame } = useGames();\n\n  return (\n    <Button\n      size=\"sm\"\n      onClick={() => socket.emit(\"end game\", currentGame)}\n      colorScheme=\"yellow\"\n    >\n      Leave Game\n    </Button>\n  );\n}\n","import React from \"react\";\nimport { useSocket } from \"../contexts/SocketConext\";\nimport { store } from \"react-notifications-component\";\nimport { Button } from \"@chakra-ui/button\";\n\nexport default function LogoutButton() {\n  const { socket } = useSocket();\n\n  function logout() {\n    socket.disconnect();\n    const logoutNotification = {\n      title: \"Logout\",\n      message: \"You have been logged out successfully.\",\n      type: \"success\",\n      insert: \"top\",\n      container: \"top-right\",\n      animationIn: [\"animate__animated\", \"animate__fadeIn\"],\n      animationOut: [\"animate__animated\", \"animate__fadeOut\"],\n      dismiss: {\n        duration: 1000,\n        onScreen: true,\n      },\n    };\n    store.addNotification(logoutNotification);\n  }\n\n  return (\n    <Button size=\"sm\" onClick={logout} colorScheme=\"red\">\n      Logout\n    </Button>\n  );\n}\n","import React from \"react\";\n\nimport { Heading, HStack, ListItem, Text } from \"@chakra-ui/layout\";\nimport { List } from \"@chakra-ui/react\";\n\nimport { useUsers } from \"../contexts/UsersContext\";\nimport { useGames } from \"../contexts/GamesContext\";\n\nimport LeaveGameButton from \"./LeaveGameButton\";\nimport LogoutButton from \"./LogoutButton\";\n\nimport { isObjectEmpty } from \"../utils/utils\";\n\nexport default function Navbar() {\n  const { currentUser } = useUsers();\n  const { currentGame } = useGames();\n\n  const isAuthenticated = !isObjectEmpty(currentUser);\n  const gameExists = !isObjectEmpty(currentGame);\n  return (\n    <List\n      display=\"flex\"\n      py={3}\n      px={5}\n      alignItems=\"center\"\n      bgColor=\"blue.50\"\n      as={HStack}\n    >\n      <ListItem flexGrow=\"1\">\n        <Heading\n          size=\"md\"\n          textAlign=\"left\"\n          bgColor=\"gray.200\"\n          borderRadius=\"15px\"\n          p={3}\n          w=\"fit-content\"\n        >\n          <Text display=\"inline\" color=\"red.500\">\n            Online\n          </Text>{\" \"}\n          <Text display=\"inline\" color=\"blue.500\">\n            Connect\n          </Text>{\" \"}\n          <Text display=\"inline\" color=\"yellow.500\">\n            4\n          </Text>\n        </Heading>\n      </ListItem>\n      {gameExists && (\n        <ListItem key=\"leave-game\">\n          <LeaveGameButton />\n        </ListItem>\n      )}\n      {isAuthenticated && (\n        <ListItem key=\"logout\">\n          <LogoutButton />\n        </ListItem>\n      )}\n    </List>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nimport Routes from \"./components/Routes\";\n\nimport TypesProvider from \"./contexts/TypesContext\";\nimport UsersProvider from \"./contexts/UsersContext\";\nimport GamesProvider from \"./contexts/GamesContext\";\nimport SocketProvider from \"./contexts/SocketConext\";\n\nimport \"./App.css\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport Modal from \"react-modal\";\nimport Navbar from \"./components/Navbar\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nfunction App() {\n  const appElement = useRef(null);\n\n  useEffect(() => {\n    Modal.setAppElement(appElement.current);\n  });\n\n  return (\n    <div className=\"App\" ref={appElement}>\n      <ChakraProvider>\n        <TypesProvider>\n          <UsersProvider>\n            <GamesProvider>\n              <SocketProvider>\n                <ReactNotification />\n                <Navbar />\n                <Router>\n                  <Routes />\n                </Router>\n              </SocketProvider>\n            </GamesProvider>\n          </UsersProvider>\n        </TypesProvider>\n      </ChakraProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}